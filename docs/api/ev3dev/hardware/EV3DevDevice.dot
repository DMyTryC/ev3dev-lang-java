#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.Device
	c1401 [label=<<table title="ev3dev.hardware.Device" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Device.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Device </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # closeList : ArrayList&lt;Closeable&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Device() </td></tr>
<tr><td align="left" balign="left"> # releaseOnClose(res : Closeable) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
		</table></td></tr>
		</table>>, URL="./Device.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.EV3DevDevice
	c1403 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./EV3DevDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3DevDevice </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEVICE_ROOT_PATH : String </td></tr>
<tr><td align="left" balign="left"> - connected : boolean </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + getAttribute(attribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + setAttribute(attribute : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPathDevice() : File </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3DevDevice.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BaseRegulatedMotor
	c1406 [label=<<table title="ev3dev.hardware.motor.BaseRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./motor/BaseRegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> BaseRegulatedMotor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # MAX_SPEED_AT_9V : int </td></tr>
<tr><td align="left" balign="left"> # NO_LIMIT : int </td></tr>
<tr><td align="left" balign="left"> # speed : float </td></tr>
<tr><td align="left" balign="left"> # acceleration : int </td></tr>
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseRegulatedMotor(motorPort : String, moveP : float, moveI : float, moveD : float, holdP : float, holdI : float, holdD : float, offset : int, maxSpeed : int) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + suspendRegulation() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTachoCount() : int </td></tr>
<tr><td align="left" balign="left"> + getPosition() : float </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> + flt() </td></tr>
<tr><td align="left" balign="left"> + flt(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitComplete() </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : int) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : float) </td></tr>
<tr><td align="left" balign="left"> + setAcceleration(acceleration : int) </td></tr>
<tr><td align="left" balign="left"> + getAcceleration() : int </td></tr>
<tr><td align="left" balign="left"> + getLimitAngle() : int </td></tr>
<tr><td align="left" balign="left"> + resetTachoCount() </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : RegulatedMotorListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener() : RegulatedMotorListener </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int) </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int) </td></tr>
<tr><td align="left" balign="left"> + getSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + isStalled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStallThreshold(error : int, time : int) </td></tr>
<tr><td align="left" balign="left"> + getRotationSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxSpeed() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./motor/BaseRegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BasicMotor
	c1407 [label=<<table title="ev3dev.hardware.motor.BasicMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./motor/BasicMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> BasicMotor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # INVALID_MODE : int </td></tr>
<tr><td align="left" balign="left"> # mode : int </td></tr>
<tr><td align="left" balign="left"> # power : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BasicMotor(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + setPower(power : int) </td></tr>
<tr><td align="left" balign="left"> + getPower() : int </td></tr>
<tr><td align="left" balign="left"> # updateState(newMode : int) </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + flt() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="./motor/BasicMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.sensor.BaseSensor
	c1414 [label=<<table title="ev3dev.hardware.sensor.BaseSensor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./sensor/BaseSensor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BaseSensor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
<tr><td align="left" balign="left"> # currentMode : int </td></tr>
<tr><td align="left" balign="left"> # modes : SensorMode[] </td></tr>
<tr><td align="left" balign="left"> ~ modeList : ArrayList&lt;String&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseSensor(sensorPort : String) </td></tr>
<tr><td align="left" balign="left"> # setModes(m : SensorMode[]) </td></tr>
<tr><td align="left" balign="left"> + getAvailableModes() : ArrayList&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + getMode(mode : int) : SensorMode </td></tr>
<tr><td align="left" balign="left"> + getMode(modeName : String) : SensorMode </td></tr>
<tr><td align="left" balign="left"> - isValid(mode : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - getIndex(modeName : String) : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(mode : int) </td></tr>
<tr><td align="left" balign="left"> + setCurrentMode(modeName : String) </td></tr>
<tr><td align="left" balign="left"> + getCurrentMode() : int </td></tr>
<tr><td align="left" balign="left"> + getModeCount() : int </td></tr>
<tr><td align="left" balign="left"> # switchMode(newMode : int, switchDelay : long) </td></tr>
		</table></td></tr>
		</table>>, URL="./sensor/BaseSensor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.EV3DevDevice extends ev3dev.hardware.Device
	c1401:p -> c1403:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BaseRegulatedMotor extends ev3dev.hardware.EV3DevDevice
	c1403:p -> c1406:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BasicMotor extends ev3dev.hardware.EV3DevDevice
	c1403:p -> c1407:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.sensor.BaseSensor extends ev3dev.hardware.EV3DevDevice
	c1403:p -> c1414:p [dir=back,arrowtail=empty];
}

