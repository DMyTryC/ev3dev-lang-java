#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// ev3dev.hardware.EV3DevDevice
	c821 [label=<<table title="ev3dev.hardware.EV3DevDevice" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../EV3DevDevice.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3DevDevice </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - DEVICE_ROOT_PATH : String </td></tr>
<tr><td align="left" balign="left"> - connected : boolean </td></tr>
<tr><td align="left" balign="left"> - pathDevice : File </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevDevice(type : String, portName : String) </td></tr>
<tr><td align="left" balign="left"> + getAttribute(attribute : String) : String </td></tr>
<tr><td align="left" balign="left"> + setAttribute(attribute : String, value : String) </td></tr>
<tr><td align="left" balign="left"> + getPathDevice() : File </td></tr>
		</table></td></tr>
		</table>>, URL="../EV3DevDevice.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.BaseRegulatedMotor
	c824 [label=<<table title="ev3dev.hardware.motor.BaseRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./BaseRegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> BaseRegulatedMotor </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # MAX_SPEED_AT_9V : int </td></tr>
<tr><td align="left" balign="left"> # NO_LIMIT : int </td></tr>
<tr><td align="left" balign="left"> # speed : float </td></tr>
<tr><td align="left" balign="left"> # acceleration : int </td></tr>
<tr><td align="left" balign="left"> - SYSTEM_CLASS_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + BaseRegulatedMotor(motorPort : String, moveP : float, moveI : float, moveD : float, holdP : float, holdI : float, holdD : float, offset : int, maxSpeed : int) </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + suspendRegulation() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTachoCount() : int </td></tr>
<tr><td align="left" balign="left"> + getPosition() : float </td></tr>
<tr><td align="left" balign="left"> + forward() </td></tr>
<tr><td align="left" balign="left"> + backward() </td></tr>
<tr><td align="left" balign="left"> + flt() </td></tr>
<tr><td align="left" balign="left"> + flt(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + isMoving() : boolean </td></tr>
<tr><td align="left" balign="left"> + waitComplete() </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : int) </td></tr>
<tr><td align="left" balign="left"> + setSpeed(speed : float) </td></tr>
<tr><td align="left" balign="left"> + setAcceleration(acceleration : int) </td></tr>
<tr><td align="left" balign="left"> + getAcceleration() : int </td></tr>
<tr><td align="left" balign="left"> + getLimitAngle() : int </td></tr>
<tr><td align="left" balign="left"> + resetTachoCount() </td></tr>
<tr><td align="left" balign="left"> + addListener(listener : RegulatedMotorListener) </td></tr>
<tr><td align="left" balign="left"> + removeListener() : RegulatedMotorListener </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int, immediateReturn : boolean) </td></tr>
<tr><td align="left" balign="left"> + rotate(angle : int) </td></tr>
<tr><td align="left" balign="left"> + rotateTo(limitAngle : int) </td></tr>
<tr><td align="left" balign="left"> + getSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + isStalled() : boolean </td></tr>
<tr><td align="left" balign="left"> + setStallThreshold(error : int, time : int) </td></tr>
<tr><td align="left" balign="left"> + getRotationSpeed() : int </td></tr>
<tr><td align="left" balign="left"> + getMaxSpeed() : float </td></tr>
		</table></td></tr>
		</table>>, URL="./BaseRegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.EV3LargeRegulatedMotor
	c826 [label=<<table title="ev3dev.hardware.motor.EV3LargeRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3LargeRegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3LargeRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3LargeRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3LargeRegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.EV3MediumRegulatedMotor
	c827 [label=<<table title="ev3dev.hardware.motor.EV3MediumRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./EV3MediumRegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3MediumRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3MediumRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./EV3MediumRegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// ev3dev.hardware.motor.NXTRegulatedMotor
	c828 [label=<<table title="ev3dev.hardware.motor.NXTRegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./NXTRegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> NXTRegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ MOVE_P : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_I : float </td></tr>
<tr><td align="left" balign="left"> ~ MOVE_D : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_P : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_I : float </td></tr>
<tr><td align="left" balign="left"> ~ HOLD_D : float </td></tr>
<tr><td align="left" balign="left"> ~ OFFSET : int </td></tr>
<tr><td align="left" balign="left"> - MAX_SPEED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NXTRegulatedMotor(motorPort : String) </td></tr>
		</table></td></tr>
		</table>>, URL="./NXTRegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RegulatedMotor
	c845 [label=<<table title="lejos.robotics.RegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../lejos/robotics/RegulatedMotor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addListener(listener : RegulatedMotorListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + removeListener() : RegulatedMotorListener </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flt(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitComplete() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLimitAngle() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setSpeed(speed : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSpeed() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMaxSpeed() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isStalled() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setStallThreshold(error : int, time : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAcceleration(acceleration : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + close() </font></td></tr>
		</table></td></tr>
		</table>>, URL="../../../lejos/robotics/RegulatedMotor.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//ev3dev.hardware.motor.BaseRegulatedMotor extends ev3dev.hardware.EV3DevDevice
	c821:p -> c824:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.BaseRegulatedMotor implements lejos.robotics.RegulatedMotor
	c845:p -> c824:p [dir=back,arrowtail=empty,style=dashed];
	//ev3dev.hardware.motor.EV3LargeRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c824:p -> c826:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.EV3MediumRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c824:p -> c827:p [dir=back,arrowtail=empty];
	//ev3dev.hardware.motor.NXTRegulatedMotor extends ev3dev.hardware.motor.BaseRegulatedMotor
	c824:p -> c828:p [dir=back,arrowtail=empty];
}

